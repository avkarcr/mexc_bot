name: Python application

on: [push]

env:
  DOCKERHUB_PREFIX: "avkarcr"
  PROJECT_NAME: "mexc_bot"

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt

#      - name: Testing
#        run: |
#          pytest
#          python -m flake8

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: docker buildx
      uses: docker/setup-buildx-action@v3
    - name: docker login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: docker build push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ env.DOCKERHUB_PREFIX }}/${{ env.PROJECT_NAME }}:latest

  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: ssh comands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.CLOUD_HOST }}
            username: ${{ secrets.CLOUD_USER }}
            key: ${{ secrets.CLOUD_SSH_KEY }}
            script: |
              sudo docker ps -a | grep ${{ env.PROJECT_NAME }} | grep -oE "^[0-9a-zA-Z]+" | xargs -r -I {} sh -c 'docker stop {} && docker rm {}'
              sudo docker ps -a | grep ${{ env.PROJECT_NAME }} | grep -oE "^[0-9a-zA-Z]+" | xargs -r -I {} sh -c 'docker stop {} && docker rm {}'
              sudo docker images | grep ${{ env.PROJECT_NAME }} | awk '{print $3}' | xargs -r docker rmi
              sudo docker pull ${{ env.DOCKERHUB_PREFIX }}/${{ env.PROJECT_NAME }}:latest
              sudo docker run -d -v ~/${{ env.PROJECT_NAME }}/db:/app/DB --name ${{ env.PROJECT_NAME }} --env-file ~/${{ env.PROJECT_NAME }}/.env ${{ env.DOCKERHUB_PREFIX }}/${{ env.PROJECT_NAME }}:latest
